const hunterURL="https://untit1ed.github.io/bnbSorting/";async function getJSON(a){return await fetch(a).then(a=>a.json())}function extractSection(a){const b=a.explore_tabs[0].sections;return b.find(a=>"LISTINGS_GRID"===a.section_component_type)}const exportable=[],uniqueIds=[],countByRange={},itemsPerGrid=50,dataState=JSON.parse(document.getElementById("data-state").innerHTML),apiKey=dataState.bootstrapData["layout-init"].api_config.key;async function parsePriceRange(a){for(console.log(`Parsing from ${a.min} to ${a.max}`),a.isAnythingLeft=!0,a.itemsOffset=0;a.isAnythingLeft;){const b=new URLSearchParams(location.href.split("?")[1]);b.set("items_per_grid",itemsPerGrid),b.set("items_offset",a.itemsOffset),b.set("key",apiKey),b.set("price_min",a.min),b.set("price_max",a.max),a.last_search_session_id&&b.set("last_search_session_id",a.last_search_session_id),a.federated_search_session_id&&b.set("federated_search_session_id",a.federated_search_session_id),hunterParse.innerHTML=`Parsing page ${a.itemsOffset/itemsPerGrid+1} range ${a.min}..${a.max}`;const c=await getJSON(`${location.origin}/api/v2/explore_tabs?${b.toString()}`);if(305<c.explore_tabs[0].home_tab_metadata.listings_count){const b=Math.round((a.max-a.min)/2);return console.log(`Bisect in half $${b}`),await Promise.all([parsePriceRange(Object.assign({},a,{max:a.min+b})),parsePriceRange(Object.assign({},a,{min:a.min+b}))])}countByRange[a.max]=c.explore_tabs[0].home_tab_metadata.listings_count;const d=extractSection(c);0===d.listings.length&&console.log("Empty listings");for(const a of d.listings)-1===uniqueIds.indexOf(a.listing.id)&&(a.listing.pricing_quote=a.pricing_quote,exportable.push(a.listing),uniqueIds.push(a.listing.id));c.explore_tabs[0].pagination_metadata.has_next_page?(a.itemsOffset+=itemsPerGrid,a.last_search_session_id=d.search_session_id,a.federated_search_session_id=c.metadata.federated_search_session_id):a.isAnythingLeft=!1,hunterExport.innerHTML=`Export - ${uniqueIds.length}`}}async function initParse(){const a=new URLSearchParams(location.href.split("?")[1]);if(null==a.get("sw_lat"))return void alert("Slightly move the map");const b=+a.get("price_min"),c=+a.get("price_max");return c?void(await parsePriceRange({min:b?b:1,max:c,isAnythingLeft:!0,itemsOffset:0,last_search_session_id:!1,federated_search_session_id:!1,href:a}),hunterParse.innerHTML="Parse"):void alert("Set price range")}function exportListings(){const a=window.open(hunterURL);window.addEventListener("message",b=>{if("ready"===b.data){console.log("exporting data");const b=JSON.stringify({listings:exportable,href:location.href.split("?")[1]});console.log(b),a.postMessage(b,"*")}})}const div=document.createElement("div");div.innerHTML=`<div style='position:fixed;left:45%;top:0px;z-index:99999;background-color: bisque;  padding: 20px;'>
<a href='#' id='hunterParse'>Parse</a> |
<a href='#' id='hunterExport'>Export - 0</a>
</div>`,document.body.appendChild(div),hunterParse.onclick=initParse,hunterExport.onclick=exportListings;
